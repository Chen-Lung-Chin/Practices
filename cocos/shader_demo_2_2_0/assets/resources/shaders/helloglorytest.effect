// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        time: {value: 0.5}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform TIME {
    float time;
  }

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
    o *= texture(texture, v_uv0);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
      #endif
    #endif

    o *= v_color;
    // ALPHA_TEST(o);

    float start_lx = 0.5;
    float offset = 0.2;
    float width = 0.1;
    float strength = 1.;
    float bx = (1. - v_uv0.y) * offset;

    // if( (v_uv0.x > (start_lx + bx)) && (v_uv0.x < ((start_lx + bx) + width)) ) {
    if( v_uv0.x > 0.05 ) 
    {
       strength = 10.;
    }

    // vec3 ndc = vec3(gl_Position.xyz.x, gl_Position.xyz.y, gl_Position.xyz.z);
    // float x = (gl_FragCoord.xy.x / gl_FragCoord.w);
    

    float res_width = 960.;
    float res_height = 640.;

    // gl_FragColor = vec4((o.r * strength), (o.g * strength), (o.b * strength), o.a);
    // gl_FragColor = vec4(v_uv0.x * 10., v_uv0.x  * 10., v_uv0.x * 10., o.a);
    float r = 0.;
    if (gl_PointCoord.s < 0.) {
      r = 1.;
    } else if (gl_PointCoord.s > 1.) {
      r = 1.;
    } else if (gl_PointCoord.s > 0.7) {
      r = 0.7;
    } else if (gl_PointCoord.s > 0.5) {
      r = 0.5;
    } else if (gl_PointCoord.s > 0.2) {
      r = 0.3;
    } else if (gl_PointCoord.s > 0.1) {
      r = 0.1;
    }

    float g = 0.;
    // float t = (gl_FragCoord.y / res_height);
    float t = 0.5 - gl_PointCoord.y;
    if ( t < 0.) {
      g = 1.;
    } else if (t > 1.) {
      g = 1.;
    } else if (t > 0.7) {
      g = 0.7;
    } else if (t > 0.5) {
      g = 0.5;
    } else if (t > 0.2) {
      g = 0.3;
    } else if (t > 0.1) {
      g = 0.1;
    }
    gl_FragColor = vec4(t, 0., 0., o.a);
  }
}%
