{
  "ver": "1.0.22",
  "uuid": "ae7bd564-bc86-4f5d-baa8-820f39c22893",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform float alphaThreshold;\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nvarying vec4 v_color;\n\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  #if USE_TEXTURE\n  o *= texture2D(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n\n  o *= v_color;\n\n  float start_lx = 0.5;\n  float offset = 0.2;\n  float width = 0.1;\n  float strength = 1.;\n  float bx = (1. - v_uv0.y) * offset;\n\n  if( v_uv0.x > 0.05 ) \n  {\n     strength = 10.;\n  }\n\n  float res_width = 960.;\n  float res_height = 640.;\n\n  float r = 0.;\n  if (gl_PointCoord.s < 0.) {\n    r = 1.;\n  } else if (gl_PointCoord.s > 1.) {\n    r = 1.;\n  } else if (gl_PointCoord.s > 0.7) {\n    r = 0.7;\n  } else if (gl_PointCoord.s > 0.5) {\n    r = 0.5;\n  } else if (gl_PointCoord.s > 0.2) {\n    r = 0.3;\n  } else if (gl_PointCoord.s > 0.1) {\n    r = 0.1;\n  }\n\n  float g = 0.;\n\n  float t = 0.5 - gl_PointCoord.y;\n  if ( t < 0.) {\n    g = 1.;\n  } else if (t > 1.) {\n    g = 1.;\n  } else if (t > 0.7) {\n    g = 0.7;\n  } else if (t > 0.5) {\n    g = 0.5;\n  } else if (t > 0.2) {\n    g = 0.3;\n  } else if (t > 0.1) {\n    g = 0.1;\n  }\n  gl_FragColor = vec4(t, 0., 0., o.a);\n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\n#if USE_ALPHA_TEST\n  \n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  }\n#endif\n\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\n\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\n\nin vec4 v_color;\n\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n\nuniform TIME {\n  float time;\n}\n\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n\n  #if USE_TEXTURE\n  o *= texture(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n\n  o *= v_color;\n\n  float start_lx = 0.5;\n  float offset = 0.2;\n  float width = 0.1;\n  float strength = 1.;\n  float bx = (1. - v_uv0.y) * offset;\n\n  if( v_uv0.x > 0.05 ) \n  {\n     strength = 10.;\n  }\n\n  float res_width = 960.;\n  float res_height = 640.;\n\n  float r = 0.;\n  if (gl_PointCoord.s < 0.) {\n    r = 1.;\n  } else if (gl_PointCoord.s > 1.) {\n    r = 1.;\n  } else if (gl_PointCoord.s > 0.7) {\n    r = 0.7;\n  } else if (gl_PointCoord.s > 0.5) {\n    r = 0.5;\n  } else if (gl_PointCoord.s > 0.2) {\n    r = 0.3;\n  } else if (gl_PointCoord.s > 0.1) {\n    r = 0.1;\n  }\n\n  float g = 0.;\n\n  float t = 0.5 - gl_PointCoord.y;\n  if ( t < 0.) {\n    g = 1.;\n  } else if (t > 1.) {\n    g = 1.;\n  } else if (t > 0.7) {\n    g = 0.7;\n  } else if (t > 0.5) {\n    g = 0.5;\n  } else if (t > 0.2) {\n    g = 0.3;\n  } else if (t > 0.1) {\n    g = 0.1;\n  }\n  gl_FragColor = vec4(t, 0., 0., o.a);\n}\n"
      }
    }
  ],
  "subMetas": {}
}